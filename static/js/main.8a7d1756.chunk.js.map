{"version":3,"sources":["components/Card/Card.js","components/Header/Header.js","components/Nav/Navbar.js","App.js","index.js"],"names":["Card","_ref","clickHandler","id","image","react_default","a","createElement","className","src","onClick","Header","Navbar","message","score","topScore","href","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","removeAnimation","element","document","getElementById","state","isGuessCorrect","classList","remove","addAnimation","isCorrect","add","toggleAnimation","setTimeout","handleSaveClick","tiles","tileClicked","filter","tile","clicked","handleIncorrectClick","handleCorrectClick","randomizePhotos","setState","photos","sort","b","Math","random","maxScore","messageClass","resetGame","i","length","_this2","_this$state","Nav_Navbar","components_Header_Header","map","components_Card_Card","key","Component","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.8a7d1756.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card({clickHandler, id, image}) {\r\n  return (\r\n    <div className=\"card-holder\" id=\"card\">\r\n      <img\r\n        src={image}\r\n        className=\"card-select grow img-thumbnail m-4 pointer\"\r\n        onClick={() => clickHandler(id)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"align-items-center bg-header jumbotron text-center\">\r\n      <h1 className=\"header\">\r\n        Click on an image to earn points,\r\n      </h1>\r\n      <h1 className=\"header\">\r\n        But don't click on any more than once!\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/jsx-filename-extension */\r\n\r\nimport React from 'react';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar({ message, score, topScore }) {\r\n  return (\r\n    <nav className=\"navbar-light bg-light fixed-top\">\r\n      <ul className=\"row center list-inline m-0 nav-fill nav-height nav-width\">\r\n        <li className=\"col list-inline-item my-auto nav-calc-font p-0 m-0 text-center\">\r\n          <a className=\"nav-calc-font navbar-brand p-0 m-0 title-line-hgt\" href=\"/\" id=\"title\">Click! The Game</a>\r\n        </li>\r\n        <li className=\"col list-inline-item my-auto nav-calc-font m-0 p-0 text-center\" id=\"greeting\">\r\n          {message}\r\n        </li>\r\n        <li className=\"col list-inline-item my-auto nav-calc-font m-0 p-0 score-li-width text-center\" id=\"score\">\r\n          SCORE: {score} | TOP SCORE: {topScore}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable react/prefer-stateless-function */\r\n\r\nimport \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Header from \"./components/Header\";\r\nimport Navbar from \"./components/Nav/Navbar\";\r\nimport tiles from \"./components/game.json\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isGuessCorrect: true,\r\n      tiles: tiles,\r\n      score: 0,\r\n      maxScore: 12,\r\n      topScore: 0,\r\n      message: \"Click any image to begin!\"\r\n    };\r\n  }\r\n\r\n  removeAnimation = () => {\r\n    let element = document.getElementById(\"card\");\r\n    // If incorrect\r\n    if (!this.state.isGuessCorrect) {\r\n      element.classList.remove(\"w3-grayscale\");\r\n    }\r\n  };\r\n\r\n  addAnimation = isCorrect => {\r\n    let element = document.getElementById(\"card\");\r\n    // If incorrect\r\n    if (!this.state.isGuessCorrect) {\r\n      element.classList.add(\"w3-grayscale\");\r\n    }\r\n  };\r\n\r\n  // Toggle\r\n  toggleAnimation = isCorrect => {\r\n    // If correct\r\n    if (isCorrect) {\r\n      // Add animation\r\n      this.addAnimation(true);\r\n      setTimeout(this.removeAnimation, 300);\r\n    }\r\n    // If incorrect\r\n    if (!isCorrect) {\r\n      // Add animation\r\n      this.addAnimation(false);\r\n      setTimeout(this.removeAnimation, 300);\r\n    }\r\n  };\r\n\r\n\r\n  // Main click handler\r\n  handleSaveClick = id => {\r\n    const tiles = this.state.tiles;\r\n    // Match the one clicked\r\n    const tileClicked = tiles.filter(tile => tile.id === id);\r\n\r\n    // If the tile isn't clicked...\r\n    if (!tileClicked[0].clicked) {\r\n      tileClicked[0].clicked = true;\r\n      // If correct\r\n      this.handleCorrectClick();\r\n      // Animation\r\n      this.toggleAnimation(true);\r\n\r\n      // Switch the order\r\n      this.randomizePhotos(tiles);\r\n\r\n      this.setState({ tiles });\r\n    } else {\r\n      this.handleIncorrectClick();\r\n      this.toggleAnimation(false);\r\n    }\r\n  };\r\n\r\n  // Function to switch up the pictures\r\n  randomizePhotos = photos => {\r\n    photos.sort((a, b) => {\r\n      return 0.5 - Math.random();\r\n    });\r\n  };\r\n\r\n  // Handler for correct guesses/clicks\r\n  handleCorrectClick = () => {\r\n    // Check the state\r\n    this.setState({ isGuessCorrect: true });\r\n    if (this.state.score + 1 > this.state.topScore) {\r\n      this.setState({ topScore: this.state.topScore + 1 });\r\n    }\r\n    if (this.state.score + 1 >= this.state.maxScore) {\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n        message: \"CONGRATS! You won!!\",\r\n        messageClass: \"correct\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n        message: \"Correct!\",\r\n        messageClass: \"correct\"\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handler for incorrect guesses/clicks\r\n  handleIncorrectClick = () => {\r\n    this.setState({\r\n      message: \"Sorry! You lost. Want to play again?\",\r\n      isGuessCorrect: false\r\n    });\r\n    // Reset\r\n    this.resetGame();\r\n  };\r\n\r\n  // Function to reset the game\r\n  resetGame = id => {\r\n    const tiles = this.state.tiles;\r\n    for (let i = 0; i < tiles.length; i++) {\r\n      tiles[i].clicked = false;\r\n    }\r\n    this.setState({ score: 0 });\r\n  };\r\n\r\n  // Render the App \r\n  render() {\r\n    const { message, score, tiles, topScore } = this.state;\r\n    return (\r\n      <div className=\"fluid-container lodge h-100vh\">\r\n        <Navbar\r\n          className=\"row\"\r\n          score={score}\r\n          topScore={topScore}\r\n          message={message}\r\n        />\r\n        <Header className=\"bg-header row\" />\r\n\r\n        <div className=\"d-flex justify-content-center main-content mx-auto padding-main flex-wrap row\">\r\n          {tiles.map(({ id, image, clicked }) => (\r\n            <Card\r\n              key={id}\r\n              id={id}\r\n              image={image}\r\n              clicked={clicked}\r\n              clickHandler={this.handleSaveClick}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable import/no-named-as-default-member */\r\n/* eslint-disable import/no-named-as-default */\r\n/* eslint-disable import/no-unresolved */\r\n/* eslint-disable react/jsx-filename-extension */\r\n\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}